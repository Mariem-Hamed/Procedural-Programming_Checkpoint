//Main algorithm
ALGORITHM Dot product
VAR
   matrix_pairs : ARRAY_OF FLOAT[50][50]
   n,m : INTEGER
   ps: FLOAT
BEGIN
    REPEAT
    Read (m)
    Read (n)   
    UNTIL (n>=2 AND n<=50) AND(m>=2 AND m<=50)
    Read_matrix(matrix_pairs,n,m) 
        FOR i FROM 0 TO n-1 STEP step 1 DO
        ps:= dot_product(matrix_pairs[i],matrix_pairs[i+1])
            IF (ps=0) THEN
                Write (matrix_pairs[i],"and",matrix_pairs[i+1],"are orthogonal")
            END_IF
    END_FOR
END

//Procedure Saisie Matrice
PROCEDURE Read_matrix (VAR M: ARRAY_OF FLOAT,n,m : INTEGER)
VAR
    i,j : INTEGER;
BEGIN
    FOR i FROM 0 TO n-1 STEP 1  DO
        FOR j FROM 0 TO m-1 STEP 1  DO
            Read (M[i][j])
        END_FOR
    END_FOR
END

// Fonction dot_product
FUNCTION dot_product(v1,v2: ARRAY_OF FLOAT): FLOAT
VAR
 i:INTEGER;
 res:FLOAT;
BEGIN
    res:=0
    FOR i FROM 0 TO v1.length-1 STEP 1  DO
    res := res + (v1[i] * v2 [i]) ;
    END_FOR 
    END_FOR
    RETURN res
END



