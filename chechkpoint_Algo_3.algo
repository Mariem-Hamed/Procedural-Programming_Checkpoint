// Procedure dot_product
PROCEDURE dot_product(v1,v2)
VAR
 ps : FLOAT;
 v1 : array_1 : ARRAY_OF FLOAT[50]; 
 v2 : array_2 : ARRAY_OF FLOAT[50];
 i,j : INTEGER;
BEGIN
    FOR i FROM 0 TO v1 length STEP 1  DO
            FOR j FROM 0 TO v2.length STEP 1 DO
            IF i=j THEN
            ps = ps + (v1[i] * v2 [j]) ;
            END_IF
            END_FOR 
    END_FOR
END


// Procedure orthogonal vectors

PROCEDURE Orthogonal_Vectors(parameters)
VAR
    v1 : array of FLOAT[50];
    v2 : array_2 : ARRAY_OF FLOAT[50];

BEGIN
    read (n); 
    FOR i FROM 0 TO n STEP 1  DO
        read (v1);
        read (v2);
    END_FOR
    Product = dot_product; 
    IF (Product) THEN
        Write("vectors are orthogonal")
    ELSE
        Write("vectors are not orthogonal")
    END_IF
END

// Function orthogonal vectors

FUNCTION dot_product(v1,v2 :ARRAY_OF FLOAT[50]) : FLOAT;
VAR
    ps : FLOAT;
    i,j : INTEGER;
BEGIN
    FOR i FROM 0 TO v1 length STEP step  DO
        FOR j FROM 0 TO v2 length STEP step  DO
         IF (i=j) THEN
         ps := ps + v1[i] * v2[j] ;
         END_IF
        END_FOR
    END_FOR
    RETURN ps ;
END




